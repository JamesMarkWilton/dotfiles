#!/usr/bin/env ruby
# tests in test/ss.feature (https://github.com/JoshCheek/dotfiles/blob/master/test/ss.feature)

def arg?(*potential_args)
  potential_args.any?  { |arg| ARGV.include? arg }
end

require 'time'

screenshot_dir = File.expand_path \
  ENV.fetch('SCREENSHOT_DIR', "~/Dropbox/Screenshots/")

long_long_ago = Time.parse('1900-01-01') # a "null" time value

most_recent_screenshot_path =
  Dir[File.join screenshot_dir, '*.png']
    .grep(/Screenshot \d\d\d\d-\d\d-\d\d \d\d\.\d\d\.\d\d\.png$/)
    .max_by { |filepath|
      begin
        filename = File.basename(filepath)
        Time.strptime filename, "Screenshot %Y-%m-%d %H.%M.%S.png"
      rescue ArgumentError
        long_long_ago
      end
    }

if arg? '-h', '--help', 'help'
  puts "ss [-p] [location]"
  puts
  puts "  Common screenshot shit I wind up wanting to do"
  puts
  puts "  Examples: https://github.com/JoshCheek/dotfiles/blob/master/test/ss.feature"
  puts
  puts
  puts "  no args           # prints out the name"
  puts "  location          # copy the screenshot to this location"
  puts "  -s | --sketch     # open the screenshot in Sketch"
  puts "  -o | --open       # open with preview"
  puts "  -R | --reveal     # Open with finder"
elsif arg? '-s', '--sketch'
  system 'open', '-a', 'Sketch.app',  most_recent_screenshot_path
elsif arg? '-o', '--open'
  system 'open', most_recent_screenshot_path
elsif arg? '-R', '--reveal'
  system 'open', '--reveal', most_recent_screenshot_path
elsif ARGV.any?
  system 'cp', most_recent_screenshot_path, ARGV.first
else
  puts most_recent_screenshot_path
end
